package br.com.ifsp.livraria.gui;

import java.awt.Color;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.text.ParseException;

import javax.swing.JButton;
import javax.swing.JComboBox;
import javax.swing.JFormattedTextField;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTextField;
import javax.swing.text.MaskFormatter;

import br.com.ifsp.livraria.bd.JDBCLivroDao;
import br.com.ifsp.livraria.bd.LivroDao;
import br.com.ifsp.livraria.enums.Categoria;
import br.com.ifsp.livraria.model.Livro;

public class TelaCadastroDeLivros {
	public TelaCadastroDeLivros() throws ParseException {
		final JFrame telaCadastroLivro = new JFrame("Cadastro de Livros");
		telaCadastroLivro.setSize(800, 600);
		telaCadastroLivro.setLocationRelativeTo(null); // Centro da tela
		telaCadastroLivro.setDefaultCloseOperation(telaCadastroLivro.HIDE_ON_CLOSE);
		telaCadastroLivro.setBackground(Color.CYAN);

		// painel Livro
		JPanel painelCadLivro = new JPanel();
		painelCadLivro.setSize(800, 600);
		// rotulo e textbox

		// Label avisando sobre gravar com sucesso.
		JLabel sucesso = new JLabel("");
		sucesso.setBounds(150, 250, 220, 120);
		//TODO Tratar só int
		JLabel rotISBN = new JLabel("ISBN: ");
//		JTextField txtISBN = new JTextField(10);
		//Tratamento isbn
		JFormattedTextField txtISBN = new JFormattedTextField(new MaskFormatter("##########"));
		rotISBN.setLabelFor(txtISBN);
		rotISBN.setBounds(50, 20, 80, 20);
		txtISBN.setBounds(170, 20, 80, 20);

		JLabel rotTit = new JLabel("Titulo: ");
		JTextField txtTit = new JTextField(100);
		rotTit.setLabelFor(txtTit);
		rotTit.setBounds(50, 60, 80, 20);
		txtTit.setBounds(170, 60, 200, 20);

		// Autores
		JLabel rotAut = new JLabel("Autor: ");
		JTextField txtAut = new JTextField(100);
		rotAut.setLabelFor(txtAut);
		rotAut.setBounds(50, 100, 80, 20);
		txtAut.setBounds(170, 100, 200, 20);

		JLabel rotEd = new JLabel("Editora: ");
		JTextField txtEd = new JTextField(100);
		rotEd.setLabelFor(txtEd);
		rotEd.setBounds(50, 140, 80, 20);
		txtEd.setBounds(170, 140, 80, 20);

		//TODO Format DateTime!!!
//		DateFormat format = new SimpleDateFormat("dd--MM--yyyy");
		JLabel rotDataPublica = new JLabel("Data de Publicação: ");
		JFormattedTextField txtDataPublica = new JFormattedTextField();
		rotDataPublica.setLabelFor(txtDataPublica);
		rotDataPublica.setBounds(50, 180, 120, 20);
		txtDataPublica.setBounds(170, 180, 80, 20);
		
		MaskFormatter maskData;
		try {
			maskData = new MaskFormatter("##/##/####");
			maskData.install(txtDataPublica);
			txtDataPublica.setCaretPosition(0);
		} catch (ParseException e1) {
			e1.printStackTrace();
		}  
		
		//Categoria
		JLabel rotCategoria = new JLabel("Categoria: ");
		Categoria[] values = Categoria.values();
		
		JComboBox cboxCategoria = new JComboBox(values);
		rotCategoria.setLabelFor(cboxCategoria);
		rotCategoria.setBounds(50, 220, 120, 20);
		cboxCategoria.setBounds(170, 220, 80, 20);
		cboxCategoria.setSelectedIndex(-1);
		
		//Preço de Venda
		JLabel rotPrecoVenda = new JLabel("Preço de Venda: ");
		JFormattedTextField txtPrecoVenda = new JFormattedTextField(new MaskFormatter("#'###.00"));
		rotPrecoVenda.setLabelFor(txtPrecoVenda);
		rotPrecoVenda.setBounds(50, 260, 120, 20);
		txtPrecoVenda.setBounds(170, 260, 80, 20);
		
		
		
		// Buttons
		JButton btnSalvar = new JButton("Salvar");
		btnSalvar.setBounds(130, 560, 90, 20);

		JButton btnCancelar = new JButton("Cancelar");
		btnCancelar.setBounds(240, 560, 90, 20);

		// Listeners
		//Salvar
		btnSalvar.addActionListener(new ActionListener() {
			@Override
			public void actionPerformed(ActionEvent arg0) {
				LivroDao livroDao = new JDBCLivroDao();
				Livro livro = new Livro();
				
				livro.setIsbn(Integer.parseInt(txtISBN.getText()));
				livro.setTitulo(txtTit.getText());
				livro.setDataDePublicacao(txtDataPublica.getText());
//				livro.setEditora(txtEd.getText());
				livro.setCategoria(cboxCategoria.getSelectedItem().toString());
//				livro.setPrecoDeVenda(Double.parseDouble())
//				livro.setResumo
//				livro.setIndice
				
				livro.setAutor(txtAut.getText());
				
//				livro.setPrecoDeCusto
//				livro.setMargemDeLucro
//				livro.setQuantidadeEmEstoque
				
			}
		});
		
		//Cancelar
		btnCancelar.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				txtAut.setText("");
				txtDataPublica.setText("");
				txtEd.setText("");
				txtISBN.setText("");
				txtTit.setText("");
				cboxCategoria.setSelectedIndex(-1);
				
				telaCadastroLivro.dispose();
			}
		});

		// Add components
		painelCadLivro.add(rotISBN);
		painelCadLivro.add(txtISBN);

		painelCadLivro.add(rotTit);
		painelCadLivro.add(txtTit);

		painelCadLivro.add(rotAut);
		painelCadLivro.add(txtAut);

		painelCadLivro.add(rotEd);
		painelCadLivro.add(txtEd);

		painelCadLivro.add(rotDataPublica);
		painelCadLivro.add(txtDataPublica);

		painelCadLivro.add(rotCategoria);
		painelCadLivro.add(cboxCategoria);
		
		painelCadLivro.add(rotPrecoVenda);
		painelCadLivro.add(txtPrecoVenda);
		
		painelCadLivro.add(btnSalvar);
		painelCadLivro.add(btnCancelar);
		painelCadLivro.add(sucesso);
		
		
		painelCadLivro.setLayout(null);
		
		telaCadastroLivro.add(painelCadLivro);
		painelCadLivro.setVisible(true);
		telaCadastroLivro.setVisible(true);
		telaCadastroLivro.setResizable(false);

	}
	
}
